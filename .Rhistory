p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_point(data = HWEline, aes(x = AA, y = Aa, z = aa))
Aa
Aa <-  (2 * (-seq(-0.25, 0.25, by = 0.005)^2)) +.5
HWEline <-data.frame(AA, Aa, aa)
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_point(data = HWEline, aes(x = AA, y = Aa, z = aa))
Aa <-  (2 * (-seq(-0.25, 0.25, by = 0.005)^2)) +.25
HWEline <-data.frame(AA, Aa, aa)
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_point(data = HWEline, aes(x = AA, y = Aa, z = aa))
aa <- 2x^2
aa
AA <- rev(2x^2)
Aa <-  (2 * (-seq(-0.25, 0.25, by = 0.005)^2)) +.25
HWEline <-data.frame(AA, Aa, aa)
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_point(data = HWEline, aes(x = AA, y = Aa, z = aa))
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_point(data = HWEline, aes(x = AA, y = Aa, z = aa))
Aa <-  (1/2) * (-seq(-0.25, 0.25, by = 0.005)^2)
HWEline <-data.frame(AA, Aa, aa)
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_point(data = HWEline, aes(x = AA, y = Aa, z = aa))
0.45^2
0.45^2 * 2
0.8 ^2
aa <- x^2
AA <- rev(x^2)
Aa <-  (1/2) * (-seq(-0.25, 0.25, by = 0.005)^2)
HWEline <-data.frame(AA, Aa, aa)
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_point(data = HWEline, aes(x = AA, y = Aa, z = aa))
p <- ggetern() + tern_limits(1,1,1)
library(ggtern)
p <- ggetern() + tern_limits(1,1,1)
library(ggtern)
p <- ggtern() + tern_limits(1,1,1)
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_point(data = HWEline, aes(x = AA, y = Aa, z = aa))
Aa <-  (4) * (-seq(-0.25, 0.25, by = 0.005)^2)
HWEline <-data.frame(AA, Aa, aa)
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_point(data = HWEline, aes(x = AA, y = Aa, z = aa))
Aa <-  (1/2) * (-seq(-0.25, 0.25, by = 0.005)^2) +.5
HWEline <-data.frame(AA, Aa, aa)
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_point(data = HWEline, aes(x = AA, y = Aa, z = aa))
x <- seq(0, 1, by = 0.005)
aa <- x^2
AA <- rev(x^2)
Aa <-  (1/2) * (-seq(-0.25, 0.25, by = 0.0025)^2) +.5
HWEline <-data.frame(AA, Aa, aa)
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_point(data = HWEline, aes(x = AA, y = Aa, z = aa))
HWEline
Aa <-  (2) * (-seq(-0.25, 0.25, by = 0.0025)^2) +.5
HWEline <-data.frame(AA, Aa, aa)
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_point(data = HWEline, aes(x = AA, y = Aa, z = aa))
HWEline
Aa <-  (2) * (-seq(-0.25, 0.25, by = 0.0025)^2) +.5
HWEline <-data.frame(AA, Aa, aa)
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_point(data = HWEline, aes(x = AA, y = Aa, z = aa))
Aa <-  (10) * (-seq(-0.25, 0.25, by = 0.0025)^2) +.5
HWEline <-data.frame(AA, Aa, aa)
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_point(data = HWEline, aes(x = AA, y = Aa, z = aa))
Aa <-  (100) * (-seq(-0.25, 0.25, by = 0.0025)^2) +.5
HWEline <-data.frame(AA, Aa, aa)
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_point(data = HWEline, aes(x = AA, y = Aa, z = aa))
Aa <-  (2) * (-seq(-0.25, 0.25, by = 0.0025)^2) +.5
HWEline <-data.frame(AA, Aa, aa)
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_point(data = HWEline, aes(x = AA, y = Aa, z = aa))
Aa <-  (3) * (-seq(-0.25, 0.25, by = 0.0025)^2) +.5
HWEline <-data.frame(AA, Aa, aa)
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_point(data = HWEline, aes(x = AA, y = Aa, z = aa))
x <- seq(0, 1, by = 0.001)
aa <- x^2
AA <- rev(x^2)
Aa <-  (3) * (-seq(-0.25, 0.25, by = 0.0005)^2) +.5
HWEline <-data.frame(AA, Aa, aa)
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_point(data = HWEline, aes(x = AA, y = Aa, z = aa))
library(ggtern)
p <- ggtern() + tern_limits(1,1,1)
x <- seq(0, 1, by = 0.001)
aa <- x^2
AA <- rev(x^2)
Aa <-  (4) * (-seq(-0.25, 0.25, by = 0.0005)^2) +.5
HWEline <-data.frame(AA, Aa, aa)
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_point(data = HWEline, aes(x = AA, y = Aa, z = aa))
Aa <-  (10) * (-seq(-0.25, 0.25, by = 0.0005)^2) +.5
HWEline <-data.frame(AA, Aa, aa)
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_point(data = HWEline, aes(x = AA, y = Aa, z = aa))
?ggtern
## DUMMY DATA
##-----------------------------------------------
set.seed(1)
DATA.SIMPLE <- data.frame(x=1,
y=1,
z=1)
DATA.POLY   <- data.frame(x=c(.8,.1,.1),
z=c(.1,.1,.8))
DATA.POLY2  <- data.frame(x=c(.7,.1,.3),
y=c(.1,.8,.2),
y=c(.1,.8,.1),
z=c(.2,.1,.5))
DATA.RANDOM <- data.frame(x     = runif(50),
y     = runif(50),
z     = runif(50),
Value = runif(50,1,10),
GroupA= as.factor(round(runif(50,1,2))),
GroupB= as.factor(round(runif(50,1,2))),
Group = as.factor(as.integer(runif(50,1,4))))
DATA.RANDOM2 <- data.frame(x=runif(50),
y=runif(50),
z=runif(50),
colour=runif(50),
groupA=rep(paste(c("A1","A2"),""),25)[sample(25)],
groupB=rep(paste(c("B1","B2"),""),25)[sample(25)])
##-----------------------------------------------
## CONSTRUCTION -- NOTE x, y and z aesthetics.
##-----------------------------------------------
#Method 1
plot <- ggtern(data=DATA.SIMPLE,aes(x,y,z)) + geom_point()
plot
#Method 2
plot <- ggplot(data=DATA.SIMPLE,aes(x,y,z)) + geom_point() + coord_tern()
plot
##-----------------------------------------------
## MODIFY LABELS
##-----------------------------------------------
plot + labs(x="XA",y="YA",z="ZA") #Ternary Axis Method 1
#additional commands (uncomment to execute)
#plot + labs(T="XB",L="YB",R="ZB") #Ternary Axis Method 2
##-----------------------------------------------
## Arrow Label Suffix
##-----------------------------------------------
plot + labs(W="SUFFIX")           #Suffix
plot + atomic_percent()
plot + Tlab(expression(x^2)) + atomic_percent()
#additional commands (uncomment to execute)
#plot + weight_percent()
#plot + custom_percent("CUSTOM")
##-----------------------------------------------
## Clockwise / Anticlockwise
##-----------------------------------------------
plot + tern_clockwise()        # -- (1)
plot + tern_anticlockwise()    # -- (2)
#additional commands (uncomment to execute)
#plot + tern_counterclockwise() #alias to #2
##-----------------------------------------------
## Axis Limitations / Restrictions
##-----------------------------------------------
plot + coord_tern(Tlim=c(.3,1),
Llim=c(0,.7),
Rlim=c(0,.7))
plot + tern_limits(1,.7,.7)    #More Convenient
#additional commands (uncomment to execute)
#plot + tern_limit(1,.7,.7)     #Alias 1
#plot + limit_tern(1,.7,.7)     #Alias 2
#plot + limits_tern(1,.7,.7)    #Alias 3
##-----------------------------------------------
## Demonstration of Focussing on Region
##-----------------------------------------------
ggtern(data=data.frame(x=c(.8,.3,.3),
y=c(.1,.6,.1),
z=c(.1,.1,.6)),
aes(x=x,y=y,z=z)) +
geom_polygon(color="red",alpha=0.25,size=2,linetype=2) +
geom_point(size=3,color="magenta",fill="yellow",shape=21) +
labs(title="Region to Focus")
last_plot() + coord_tern(Tlim=c(.3,.8),Llim=c(.1,0.6),Rlim=c(.1,0.6)) +
labs(title="Region After Focus")
##-----------------------------------------------
## Custom Themes
##-----------------------------------------------
plot + theme_tern_rgbw()
#Additional themes (uncomment to execute)
#plot + theme_bw()
#plot + theme_gray()
#plot + theme_rgbg()
##-----------------------------------------------
## Use of Color Aesthetics -- Just like Normal!
##-----------------------------------------------
plot <- ggtern(data=DATA.RANDOM,aes(x,y,z)) +
geom_point(aes(fill=Group),shape=21)
plot
##-----------------------------------------------
## Use of geom_polygon
##-----------------------------------------------
plot <- ggtern(data=DATA.POLY,aes(x,y,z)) +
geom_polygon(fill="yellow",
alpha=0.5,
color="red",
size=2,
linetype=2)
plot
##-----------------------------------------------
rm(list = ls())
##-----------------------------------------------
plot <- ggtern(data=DATA.POLY,aes(x,y,z)) +
geom_polygon(fill="yellow",
alpha=0.5,
color="red",
size=2,
linetype=2)
plot
##-----------------------------------------------
## DUMMY DATA
##-----------------------------------------------
set.seed(1)
DATA.SIMPLE <- data.frame(x=1,
y=1,
z=1)
DATA.POLY   <- data.frame(x=c(.8,.1,.1),
y=c(.1,.8,.1),
z=c(.1,.1,.8))
DATA.POLY2  <- data.frame(x=c(.7,.1,.3),
y=c(.1,.8,.2),
z=c(.2,.1,.5))
DATA.RANDOM <- data.frame(x     = runif(50),
y     = runif(50),
z     = runif(50),
Value = runif(50,1,10),
GroupA= as.factor(round(runif(50,1,2))),
GroupB= as.factor(round(runif(50,1,2))),
Group = as.factor(as.integer(runif(50,1,4))))
DATA.RANDOM2 <- data.frame(x=runif(50),
y=runif(50),
z=runif(50),
colour=runif(50),
groupA=rep(paste(c("A1","A2"),""),25)[sample(25)],
groupB=rep(paste(c("B1","B2"),""),25)[sample(25)])
##-----------------------------------------------
plot <- ggtern(data=DATA.POLY,aes(x,y,z)) +
geom_polygon(fill="yellow",
alpha=0.5,
color="red",
size=2,
linetype=2)
plot
plot <- ggtern(data=DATA.RANDOM2,aes(x,y,z)) +
geom_point() +
geom_path()
plot
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_path(data = HWEline, aes(x = AA, y = Aa, z = aa))
dat <- data.frame(aa = c(0.8,  0.64, 0.25, 0.01),
Aa = c(0.19, 0.3,  0.5,  0.19),
AA = c(0.01, 0.03, 0.25, 0.8),
SNP = c("SNP1", "SNP2", "SNP3", "SNP4"))
library(ggtern)
p <- ggtern() + tern_limits(1,1,1)
x <- seq(0, 1, by = 0.001)
aa <- x^2
AA <- rev(x^2)
Aa <-  (10) * (-seq(-0.25, 0.25, by = 0.0005)^2) +.5
HWEline <-data.frame(AA, Aa, aa)
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_path(data = HWEline, aes(x = AA, y = Aa, z = aa))
Aa
aa
AA
Aa <-  (1/2) * (seq(-0.25, 0.25, by = 0.0005)^2)
Aa
Aa <-  (1/2) * (seq(-0.25, 0.25, by = 0.0005)^2)
Aa
Aa <-   (seq(-0.5, 0.5, by = 0.0005)^2)
Aa
Aa <-  2 * (seq(-0.5, 0.5, by = 0.0005)^2)
Aa
Aa <-  -(2 * (seq(-0.5, 0.5, by = 0.0005)^2) )
HWEline <-data.frame(AA, Aa, aa)
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_path(data = HWEline, aes(x = AA, y = Aa, z = aa))
Aa
Aa <-  -(2 * (seq(-0.5, 0.5, by = 0.001)^2) )
HWEline <-data.frame(AA, Aa, aa)
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_path(data = HWEline, aes(x = AA, y = Aa, z = aa))
Aa <-  -(2 * (seq(-0.5, 0.5, by = 0.001)^2) )
Aa
Aa <-  -(2 * (seq(-0.5, 0.5, by = 0.001)^2) ) + .5
HWEline <-data.frame(AA, Aa, aa)
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_path(data = HWEline, aes(x = AA, y = Aa, z = aa))
dat <- data.frame(aa = c(0.8,  0.64, 0.25, 0.01),
Aa = c(0.19, 0.3,  0.5,  0.19),
AA = c(0.01, 0.03, 0.25, 0.8),
SNP = c("SNP1", "SNP2", "SNP3", "SNP4"))
library(ggtern)
p <- ggtern() + tern_limits(1,1,1)
x <- seq(0, 1, by = 0.01)
aa <- x^2
AA <- rev(x^2)
Aa <-  -(2 * (seq(-0.5, 0.5, by = 0.01)^2) ) + .5
HWEline <-data.frame(AA, Aa, aa)
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_path(data = HWEline, aes(x = AA, y = Aa, z = aa))
HWEline
?ggtern
list.files(pattern = ".csv")
files <- list.files(pattern = ".csv")
dat <- data.frame
dat <- data.frame()
dat <- data.frame()
for(i in seq(files)) {
dat <- rbind(dat, read.csv(files[i]))
}
for(i in seq(files)) {
dat <- rbind(dat, read.csv(files[i], skip =15))
}
for(i in seq(files)) {
dat <- rbind(dat, read.csv(files[i], skip =14))
}
read.csv(files[i], skip =14)
head(read.csv(files[i]))
read.csv(files[i], skip =14)
head(read.csv(files[i], skip =14))
for(i in seq(files)) {
dat <- rbind(dat, read.csv(files[i], skip = 15))
}
dat
dat <- read.csv(files[1], skip = 15))
dat <- read.csv(files[1], skip = 15)
x <- seq(0, 1, by = 0.01)
aa <- x^2
AA <- rev(x^2)
Aa <-  -(2 * (seq(-0.5, 0.5, by = 0.01)^2) ) + .5
HWEline <-data.frame(AA, Aa, aa)
library(ggtern)
library(dplyr)
summarize
summarize(dat, length(Final))
group_by
dat %>% group_by(Assay) %>% summarize(dat, length(Final))
dat %>% group_by(Assay) %>% summarize( length(Final))
dat %>% group_by(Assay, Final) %>% summarize( length(Final))
dat <- dat %>% group_by(Assay, Final) %>% summarize( length(Final))
dat %>% group_by(Assay)
dat <- read.csv(files[1], skip = 15)
dat <- dat %>% group_by(Assay, Final) %>% summarize(x =  length(Final))
dat
dat <- dat %>% group_by(Assay, Final) %>% summarize( n  =  length(Final))
p <- ggtern() + tern_limits(1,1,1)
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_path(data = HWEline, aes(x = AA, y = Aa, z = aa))
dat <- read.csv(files[1], skip = 15)
dat %>% group_by(Assay, Final) %>% summarize( n  =  length(Final))
group_by(Assay, Final)
dat %>% group_by(Assay, Final)
dat <- dat %>% group_by(Assay, Final) %>% summarize( n  =  length(Final))
dat
dat %>% group_by(Assay, Final) %>% summarize( n  =  length(Final))
dat <- read.csv(files[1], skip = 15)
dat <- dat %>% group_by(Assay, Final) %>% summarize( n  =  length(Final))
dat
dat$Final == XX
dat$Final == "XX"
dat[dat$Final == "XX",]
dat
dput(dat)
dat
class(dat)
as.data.frame(dat)
dput(as.data.frame(dat))
library(dplyr)
library(ggtern)
dat <- data.frame(aa = c(0.8,  0.64, 0.25, 0.01),
Aa = c(0.19, 0.3,  0.5,  0.19),
AA = c(0.01, 0.03, 0.25, 0.8),
SNP = c("SNP1", "SNP2", "SNP3", "SNP4"))
files <- list.files(pattern = ".csv")
dat <- read.csv(files[1], skip = 15)
dat <- dat %>% group_by(Assay, Final) %>% summarize( n  =  length(Final))
dat[dat$Final == "XX",]
dat %>% group_by(Assay) %>% summarize( )
x <- seq(0, 1, by = 0.01)
aa <- x^2
AA <- rev(x^2)
Aa <-  -(2 * (seq(-0.5, 0.5, by = 0.01)^2) ) + .5
HWEline <-data.frame(AA, Aa, aa)
p <- ggtern() + tern_limits(1,1,1)
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_path(data = HWEline, aes(x = AA, y = Aa, z = aa))
library(dplyr)
library(ggtern)
dat <- data.frame(aa = c(0.8,  0.64, 0.25, 0.01),
Aa = c(0.19, 0.3,  0.5,  0.19),
AA = c(0.01, 0.03, 0.25, 0.8),
SNP = c("SNP1", "SNP2", "SNP3", "SNP4"))
files <- list.files(pattern = ".csv")
dat <- read.csv(files[1], skip = 15)
dat <- dat %>% group_by(Assay, Final) %>% summarize( n  =  length(Final))
dat[dat$Final == "XX",]
dat %>% group_by(Assay) %>% summarize( )
x <- seq(0, 1, by = 0.01)
aa <- x^2
AA <- rev(x^2)
Aa <-  -(2 * (seq(-0.5, 0.5, by = 0.01)^2) ) + .5
HWEline <-data.frame(AA, Aa, aa)
p <- ggtern() + tern_limits(1,1,1)
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_path(data = HWEline, aes(x = AA, y = Aa, z = aa))
dat
dat <- data.frame(aa = c(0.8,  0.64, 0.25, 0.01),
Aa = c(0.19, 0.3,  0.5,  0.19),
AA = c(0.01, 0.03, 0.25, 0.8),
SNP = c("SNP1", "SNP2", "SNP3", "SNP4"))
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_path(data = HWEline, aes(x = AA, y = Aa, z = aa))
structure(list(Assay = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 2L,
2L, 2L, 2L, 2L, 2L, 3L, 3L, 3L, 3L, 3L, 4L, 4L, 4L, 4L, 4L, 4L,
5L, 5L, 5L, 5L, 5L, 5L, 6L, 6L, 6L, 6L, 6L, 6L, 7L, 7L, 7L, 7L,
7L, 7L, 8L, 8L, 8L, 8L, 8L, 8L, 9L, 9L, 9L, 9L, 9L, 9L, 10L,
10L, 10L, 10L, 10L, 10L, 11L, 11L, 11L, 11L, 11L, 11L, 12L, 12L,
12L, 12L, 12L, 12L, 13L, 13L, 13L, 13L, 13L, 13L, 14L, 14L, 14L,
14L, 14L, 14L, 15L, 15L, 15L, 15L, 15L, 15L, 16L, 16L, 16L, 16L,
16L, 16L, 17L, 17L, 17L, 17L, 17L, 17L, 18L, 18L, 18L, 18L, 18L,
18L, 19L, 19L, 19L, 19L, 19L, 19L, 20L, 20L, 20L, 20L, 20L, 20L,
21L, 21L, 21L, 21L, 21L, 21L, 22L, 22L, 22L, 22L, 22L, 22L, 23L,
23L, 23L, 23L, 23L, 23L, 24L, 24L, 24L, 24L, 24L, 24L), .Label = c("One_apoe-83",
"One_CD9-269", "One_Cytb_26", "One_E2", "One_ghsR-66", "One_IL8r-362",
"One_KPNA-422", "One_lpp1-44", "One_MHC2_190", "One_MHC2_251",
"One_Prl2", "One_redd1-414", "One_STC-410", "One_STR07", "One_sys1-230",
"One_U1004-183", "One_U1105", "One_U1201-492", "One_U1203-175",
"One_U1209-111", "One_U1212-106", "One_U401-224", "One_vamp5-255",
"One_ZNF-61"), class = "factor"), Final = structure(c(1L, 2L,
3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 6L, 1L,
2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L,
6L, 1L, 2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L,
4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L, 6L, 1L,
2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L,
6L, 1L, 2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L,
4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L, 6L, 1L,
2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L,
6L, 1L, 2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L, 6L), .Label = c("Invalid",
"No Call", "NTC", "XX", "YX", "YY"), class = "factor"), n = c(2L,
9L, 2L, 4L, 41L, 134L, 2L, 5L, 2L, 99L, 75L, 9L, 2L, 7L, 2L,
110L, 71L, 2L, 8L, 2L, 110L, 59L, 11L, 2L, 6L, 2L, 67L, 86L,
29L, 2L, 3L, 2L, 152L, 28L, 5L, 2L, 4L, 2L, 78L, 81L, 25L, 2L,
4L, 2L, 115L, 62L, 7L, 2L, 17L, 2L, 80L, 62L, 29L, 2L, 13L, 2L,
59L, 68L, 48L, 2L, 7L, 2L, 48L, 86L, 47L, 2L, 7L, 2L, 42L, 87L,
52L, 2L, 3L, 2L, 47L, 81L, 57L, 2L, 9L, 2L, 40L, 85L, 54L, 2L,
8L, 2L, 52L, 86L, 42L, 2L, 7L, 2L, 9L, 39L, 133L, 2L, 8L, 2L,
101L, 71L, 8L, 2L, 13L, 2L, 20L, 82L, 73L, 2L, 11L, 2L, 27L,
75L, 75L, 2L, 6L, 2L, 3L, 40L, 139L, 2L, 13L, 2L, 59L, 82L, 34L,
2L, 19L, 2L, 20L, 84L, 65L, 2L, 11L, 2L, 119L, 47L, 11L, 2L,
8L, 2L, 51L, 100L, 29L)), class = "data.frame", .Names = c("Assay",
"Final", "n"), row.names = c(NA, -143L))
dat <- structure(list(Assay = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 2L,
2L, 2L, 2L, 2L, 2L, 3L, 3L, 3L, 3L, 3L, 4L, 4L, 4L, 4L, 4L, 4L,
5L, 5L, 5L, 5L, 5L, 5L, 6L, 6L, 6L, 6L, 6L, 6L, 7L, 7L, 7L, 7L,
7L, 7L, 8L, 8L, 8L, 8L, 8L, 8L, 9L, 9L, 9L, 9L, 9L, 9L, 10L,
10L, 10L, 10L, 10L, 10L, 11L, 11L, 11L, 11L, 11L, 11L, 12L, 12L,
12L, 12L, 12L, 12L, 13L, 13L, 13L, 13L, 13L, 13L, 14L, 14L, 14L,
14L, 14L, 14L, 15L, 15L, 15L, 15L, 15L, 15L, 16L, 16L, 16L, 16L,
16L, 16L, 17L, 17L, 17L, 17L, 17L, 17L, 18L, 18L, 18L, 18L, 18L,
18L, 19L, 19L, 19L, 19L, 19L, 19L, 20L, 20L, 20L, 20L, 20L, 20L,
21L, 21L, 21L, 21L, 21L, 21L, 22L, 22L, 22L, 22L, 22L, 22L, 23L,
23L, 23L, 23L, 23L, 23L, 24L, 24L, 24L, 24L, 24L, 24L), .Label = c("One_apoe-83",
"One_CD9-269", "One_Cytb_26", "One_E2", "One_ghsR-66", "One_IL8r-362",
"One_KPNA-422", "One_lpp1-44", "One_MHC2_190", "One_MHC2_251",
"One_Prl2", "One_redd1-414", "One_STC-410", "One_STR07", "One_sys1-230",
"One_U1004-183", "One_U1105", "One_U1201-492", "One_U1203-175",
"One_U1209-111", "One_U1212-106", "One_U401-224", "One_vamp5-255",
"One_ZNF-61"), class = "factor"), Final = structure(c(1L, 2L,
3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 6L, 1L,
2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L,
6L, 1L, 2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L,
4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L, 6L, 1L,
2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L,
6L, 1L, 2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L,
4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L, 6L, 1L,
2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L,
6L, 1L, 2L, 3L, 4L, 5L, 6L, 1L, 2L, 3L, 4L, 5L, 6L), .Label = c("Invalid",
"No Call", "NTC", "XX", "YX", "YY"), class = "factor"), n = c(2L,
9L, 2L, 4L, 41L, 134L, 2L, 5L, 2L, 99L, 75L, 9L, 2L, 7L, 2L,
110L, 71L, 2L, 8L, 2L, 110L, 59L, 11L, 2L, 6L, 2L, 67L, 86L,
29L, 2L, 3L, 2L, 152L, 28L, 5L, 2L, 4L, 2L, 78L, 81L, 25L, 2L,
4L, 2L, 115L, 62L, 7L, 2L, 17L, 2L, 80L, 62L, 29L, 2L, 13L, 2L,
59L, 68L, 48L, 2L, 7L, 2L, 48L, 86L, 47L, 2L, 7L, 2L, 42L, 87L,
52L, 2L, 3L, 2L, 47L, 81L, 57L, 2L, 9L, 2L, 40L, 85L, 54L, 2L,
8L, 2L, 52L, 86L, 42L, 2L, 7L, 2L, 9L, 39L, 133L, 2L, 8L, 2L,
101L, 71L, 8L, 2L, 13L, 2L, 20L, 82L, 73L, 2L, 11L, 2L, 27L,
75L, 75L, 2L, 6L, 2L, 3L, 40L, 139L, 2L, 13L, 2L, 59L, 82L, 34L,
2L, 19L, 2L, 20L, 84L, 65L, 2L, 11L, 2L, 119L, 47L, 11L, 2L,
8L, 2L, 51L, 100L, 29L)), class = "data.frame", .Names = c("Assay",
"Final", "n"), row.names = c(NA, -143L))
dat
dat %>%
filter(! Final %in% c("Invalid", "No Call", "NTC")) %>%
group_by(Assay) %>%
mutate(n_percent = n/sum(n)*100)
dat %>%
filter(! Final %in% c("Invalid", "No Call", "NTC")) %>%
group_by(Assay) %>%
mutate(n_percent = n/sum(n))
dat <- dat %>%
filter(! Final %in% c("Invalid", "No Call", "NTC")) %>%
group_by(Assay) %>%
mutate(n_percent = n/sum(n))
p + geom_text(data = dat, aes(x = aa, y = Aa, z = AA, label = SNP)) + geom_path(data = HWEline, aes(x = AA, y = Aa, z = aa))
dat
SN = c(1:100, 1:100, 1:100, 1:100)
class = c(rep("A1", 100), rep("B2", 100), rep("C3", 100), rep("D4", 100)) # total 6000 levels
myvar = rnorm(400)
mydf = data.frame(SN, class, myvar)
mydf
dcast
??dcast
library(reshape)
library(dplyr)
dcast(dat, Assay ~ Final)
library(reshape)
library(dplyr)
library(ggtern)
dcast(dat, Assay ~ Final)
library(reshape2)
dcast(dat, Assay ~ Final)
dat <- dcast(dat, Assay ~ Final)
p + geom_point(data = dat, aes(x = XX, y = YX, z = YY)) + geom_path(data = HWEline, aes(x = AA, y = Aa, z = aa))
library(reshape2)
library(ggtern)
p + geom_point(data = dat, aes(x = XX, y = YX, z = YY)) + geom_path(data = HWEline, aes(x = AA, y = Aa, z = aa))
install.packages(c(“Geneclust”,”deldir”,”fields”,”spatial”)
install.packages(c(“Geneclust”,”deldir”,”fields”,”spatial”))
install.packages("GeneClust")
p + geom_text(data = dat, aes(x = XX, y = YX, z = YY), label = Assay) + geom_path(data = HWEline, aes(x = AA, y = Aa, z = aa))
p + geom_text(data = dat, aes(x = XX, y = YX, z = YY, label = Assay)) + geom_path(data = HWEline, aes(x = AA, y = Aa, z = aa))
install.packages("hiefrstat")
p + geom_text(data = dat, aes(x = XX, y = YX, z = YY, label = Assay), size = 2) + geom_path(data = HWEline, aes(x = AA, y = Aa, z = aa))
p + geom_text(data = dat, aes(x = XX, y = YX, z = YY, label = Assay), size = 4) + geom_path(data = HWEline, aes(x = AA, y = Aa, z = aa))
install.packages("hiefrstat")
